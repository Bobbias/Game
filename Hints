Controlling objects

Trevor's Thoughts

CInputManager
	IController (KeyboardController, MouseController, XBOX360Controller, etc.)
	IControllable (CPawn, CPlayer)
---	
	Players have: controllers, view ports, camera, menus/selection, game state (dead, paused)
	
	IController -> Player (focus) -> Pawn / Menu
	
Goals:

Provide an interface which allows hot swappable players to be controlled by any number of different controller interfaces.
These players pass their commands to whatever objects they may control.

Game States:

Paused - player has pause menu focused
Running - player has a pawn to control
Game Menu - Main menu system for the game

Players also have individual states. Ex: When gamestate -> paused, all playerstates -> paused.

* Console state.... Need to figure out how that will be structured.


Bullet:
	Shooter.Mesh
		CollisionObject: is an object with world transform and a collision shape
		CollisionShape
		GhostObject: Special CollisionObject useful for fast localized collision Queries (how?)
	Shooter.World
		CollisionWorld: stores all collision objects and has an interface for queries
		
PersistentManifold is a contact point cache to store contact points for a given pair of objects.